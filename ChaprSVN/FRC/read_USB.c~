#include <signal.h>
#include <termios.h>
#include <sys/stat.h>
#include <sys/socket.h>

void signalHandler(int signal)
{
  syslog(LOG_INFO, "received signal: %d", signal);
}


int openUSBPort(){
	struct stat buf;
	char *ports[2] = {"/dev/ttyUSB0","/dev/ttyUSB1"}; 
	int i;
	int fd;
	struct termios t;
	
	t.c_iflag = IGNBRK | IGNPAR;
	t.c_cflag = CS8 | CREAD | CLOCAL | B38400;

	while (1){
		for (i = 0; i < 2; i++){
			// check if ttyUSB0 or 1 is available
			if (stat(ports[i], &buf) == 0){
			  syslog(LOG_INFO, "opened port: %s",ports[i]);
			  fd = open(ports[i], O_RDONLY);				
			  syslog(LOG_INFO, "opened fd: %s",ports[i]);
			  tcsetattr(fd, TCSANOW, &t);
			  return fd;
			}			
		}
		syslog(LOG_INFO, "checked for USB...");
		sleep(10);
	}
}


int main(void) {

  openlog("Read USB", LOG_PID, LOG_DAEMON);
  (void) signal(SIGHUP, signalHandler);
  (void) signal(SIGPIPE, signalHandler);

  while(1) {
    while(1){
      int fd = -1;
      while (fd != -1){
	fd = openUSBPort();
      }
      readData(fd);
    }
    close(fd);
    syslog(LOG_INFO, "just closed port :%d", fd);
  }

}
